// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                    String        @id @default(cuid())
  name                  String        @default("")
  email                 String        @unique @default("")
  password              String
  role                  String?       @default("user")
  isActive              Boolean       @default(true)
  lastLogin             DateTime?
  createdAt             DateTime?     @default(now())
  from_Tool_submittedBy Tool[]        @relation("Tool_submittedBy")
  from_Review_user      Review[]      @relation("Review_user")
  from_ToolUsage_user   ToolUsage[]   @relation("ToolUsage_user")
  from_SearchQuery_user SearchQuery[] @relation("SearchQuery_user")
  from_Collection_user  Collection[]  @relation("Collection_user")
  from_NewsItem_author  NewsItem[]    @relation("NewsItem_author")
}

model Category {
  id               String     @id @default(cuid())
  name             String     @default("")
  slug             String     @unique @default("")
  description      String     @default("")
  color            String     @default("")
  icon             String     @default("")
  parentCategory   Category?  @relation("Category_parentCategory", fields: [parentCategoryId], references: [id])
  parentCategoryId String?    @map("parentCategory")
  subCategories    Category[] @relation("Category_parentCategory")
  tools            Tool[]     @relation("Category_tools")
  sortOrder        Int?       @default(0)
  isActive         Boolean    @default(true)
  createdAt        DateTime?  @default(now())

  @@index([parentCategoryId])
}

model Tool {
  id                         String       @id @default(cuid())
  name                       String       @default("")
  slug                       String       @unique @default("")
  description                String       @default("")
  longDescription            String       @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  url                        String       @default("")
  alternativeUrls            String?      @default("[]")
  categories                 Category[]   @relation("Category_tools")
  tags                       Tag[]        @relation("Tag_tools")
  type                       String?      @default("website")
  status                     String?      @default("active")
  isPaid                     Boolean      @default(false)
  requiresRegistration       Boolean      @default(false)
  supportedRegions           String?      @default("[]")
  rating                     Int?         @default(25)
  usageCount                 Int?         @default(0)
  lastChecked                DateTime?
  lastUpdated                DateTime?
  submittedBy                User?        @relation("Tool_submittedBy", fields: [submittedById], references: [id])
  submittedById              String?      @map("submittedBy")
  reviews                    Review[]     @relation("Review_tool")
  metadata                   String?      @default("{}")
  sortOrder                  Int?         @default(0)
  isFeatured                 Boolean      @default(false)
  isVerified                 Boolean      @default(false)
  createdAt                  DateTime?    @default(now())
  from_ToolUsage_tool        ToolUsage[]  @relation("ToolUsage_tool")
  from_Collection_tools      Collection[] @relation("Collection_tools")
  from_NewsItem_relatedTools NewsItem[]   @relation("NewsItem_relatedTools")

  @@index([submittedById])
}

model Tag {
  id                   String       @id @default(cuid())
  name                 String       @default("")
  slug                 String       @unique @default("")
  description          String       @default("")
  color                String       @default("")
  tools                Tool[]       @relation("Tag_tools")
  usageCount           Int?         @default(0)
  createdAt            DateTime?    @default(now())
  from_Collection_tags Collection[] @relation("Collection_tags")
}

model Review {
  id         String    @id @default(cuid())
  tool       Tool?     @relation("Review_tool", fields: [toolId], references: [id])
  toolId     String?   @map("tool")
  user       User?     @relation("Review_user", fields: [userId], references: [id])
  userId     String?   @map("user")
  rating     Int
  title      String    @default("")
  content    String    @default("")
  isVerified Boolean   @default(false)
  isHelpful  Int?      @default(0)
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now()) @updatedAt

  @@index([toolId])
  @@index([userId])
}

model ToolUsage {
  id        String    @id @default(cuid())
  tool      Tool?     @relation("ToolUsage_tool", fields: [toolId], references: [id])
  toolId    String?   @map("tool")
  user      User?     @relation("ToolUsage_user", fields: [userId], references: [id])
  userId    String?   @map("user")
  ipAddress String    @default("")
  userAgent String    @default("")
  referrer  String    @default("")
  sessionId String    @default("")
  timestamp DateTime? @default(now())

  @@index([toolId])
  @@index([userId])
}

model SearchQuery {
  id           String    @id @default(cuid())
  query        String    @default("")
  resultsCount Int?      @default(0)
  user         User?     @relation("SearchQuery_user", fields: [userId], references: [id])
  userId       String?   @map("user")
  ipAddress    String    @default("")
  timestamp    DateTime? @default(now())

  @@index([userId])
}

model Collection {
  id          String    @id @default(cuid())
  name        String    @default("")
  slug        String    @unique @default("")
  description String    @default("")
  tools       Tool[]    @relation("Collection_tools")
  user        User?     @relation("Collection_user", fields: [userId], references: [id])
  userId      String?   @map("user")
  isPublic    Boolean   @default(false)
  tags        Tag[]     @relation("Collection_tags")
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt

  @@index([userId])
}

model NewsItem {
  id           String    @id @default(cuid())
  title        String    @default("")
  slug         String    @unique @default("")
  summary      String    @default("")
  content      String    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author       User?     @relation("NewsItem_author", fields: [authorId], references: [id])
  authorId     String?   @map("author")
  category     String?   @default("framework")
  relatedTools Tool[]    @relation("NewsItem_relatedTools")
  isPublished  Boolean   @default(false)
  publishedAt  DateTime?
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @default(now()) @updatedAt

  @@index([authorId])
}
