// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                            String         @id @default(cuid())
  name                          String         @default("")
  email                         String         @unique @default("")
  password                      String
  role                          String?        @default("user")
  isActive                      Boolean        @default(true)
  lastLogin                     DateTime?
  createdAt                     DateTime?      @default(now())
  from_Tool_submittedBy         Tool[]         @relation("Tool_submittedBy")
  from_Review_user              Review[]       @relation("Review_user")
  from_ToolUsage_user           ToolUsage[]    @relation("ToolUsage_user")
  from_SearchQuery_user         SearchQuery[]  @relation("SearchQuery_user")
  from_Collection_user          Collection[]   @relation("Collection_user")
  from_NewsItem_author          NewsItem[]     @relation("NewsItem_author")
  from_Article_author           Article[]      @relation("Article_author")
  from_ToolGuide_author         ToolGuide[]    @relation("ToolGuide_author")
  from_MediaFile_uploadedBy     MediaFile[]    @relation("MediaFile_uploadedBy")
  from_LearningPath_creator     LearningPath[] @relation("LearningPath_creator")
  from_Contribution_contributor Contribution[] @relation("Contribution_contributor")
  from_Contribution_reviewedBy  Contribution[] @relation("Contribution_reviewedBy")
}

model Category {
  id               String     @id @default(cuid())
  name             String     @default("")
  slug             String     @unique @default("")
  description      String     @default("")
  color            String     @default("")
  icon             String     @default("")
  parentCategory   Category?  @relation("Category_parentCategory", fields: [parentCategoryId], references: [id])
  parentCategoryId String?    @map("parentCategory")
  subCategories    Category[] @relation("Category_parentCategory")
  tools            Tool[]     @relation("Category_tools")
  sortOrder        Int?       @default(0)
  isActive         Boolean    @default(true)
  createdAt        DateTime?  @default(now())

  @@index([parentCategoryId])
}

model Tool {
  id                            String         @id @default(cuid())
  name                          String         @default("")
  slug                          String         @unique @default("")
  description                   String         @default("")
  longDescription               Json           @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  url                           String         @default("")
  alternativeUrls               Json?          @default("[]")
  categories                    Category[]     @relation("Category_tools")
  tags                          Tag[]          @relation("Tag_tools")
  type                          String?        @default("website")
  status                        String?        @default("active")
  isPaid                        Boolean        @default(false)
  requiresRegistration          Boolean        @default(false)
  supportedRegions              Json?          @default("[]")
  rating                        Int?           @default(25)
  usageCount                    Int?           @default(0)
  lastChecked                   DateTime?
  lastUpdated                   DateTime?
  submittedBy                   User?          @relation("Tool_submittedBy", fields: [submittedById], references: [id])
  submittedById                 String?        @map("submittedBy")
  reviews                       Review[]       @relation("Review_tool")
  guides                        ToolGuide[]    @relation("ToolGuide_tool")
  metadata                      Json?          @default("{}")
  sortOrder                     Int?           @default(0)
  isFeatured                    Boolean        @default(false)
  isVerified                    Boolean        @default(false)
  createdAt                     DateTime?      @default(now())
  from_ToolUsage_tool           ToolUsage[]    @relation("ToolUsage_tool")
  from_Collection_tools         Collection[]   @relation("Collection_tools")
  from_NewsItem_relatedTools    NewsItem[]     @relation("NewsItem_relatedTools")
  from_Article_relatedTools     Article[]      @relation("Article_relatedTools")
  from_LearningPath_tools       LearningPath[] @relation("LearningPath_tools")
  from_Contribution_relatedTool Contribution[] @relation("Contribution_relatedTool")

  @@index([submittedById])
}

model Tag {
  id                   String       @id @default(cuid())
  name                 String       @default("")
  slug                 String       @unique @default("")
  description          String       @default("")
  color                String       @default("")
  tools                Tool[]       @relation("Tag_tools")
  usageCount           Int?         @default(0)
  createdAt            DateTime?    @default(now())
  from_Collection_tags Collection[] @relation("Collection_tags")
}

model Review {
  id         String    @id @default(cuid())
  tool       Tool?     @relation("Review_tool", fields: [toolId], references: [id])
  toolId     String?   @map("tool")
  user       User?     @relation("Review_user", fields: [userId], references: [id])
  userId     String?   @map("user")
  rating     Int
  title      String    @default("")
  content    String    @default("")
  isVerified Boolean   @default(false)
  isHelpful  Int?      @default(0)
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now()) @updatedAt

  @@index([toolId])
  @@index([userId])
}

model ToolUsage {
  id        String    @id @default(cuid())
  tool      Tool?     @relation("ToolUsage_tool", fields: [toolId], references: [id])
  toolId    String?   @map("tool")
  user      User?     @relation("ToolUsage_user", fields: [userId], references: [id])
  userId    String?   @map("user")
  ipAddress String    @default("")
  userAgent String    @default("")
  referrer  String    @default("")
  sessionId String    @default("")
  timestamp DateTime? @default(now())

  @@index([toolId])
  @@index([userId])
}

model SearchQuery {
  id           String    @id @default(cuid())
  query        String    @default("")
  resultsCount Int?      @default(0)
  user         User?     @relation("SearchQuery_user", fields: [userId], references: [id])
  userId       String?   @map("user")
  ipAddress    String    @default("")
  timestamp    DateTime? @default(now())

  @@index([userId])
}

model Collection {
  id          String    @id @default(cuid())
  name        String    @default("")
  slug        String    @unique @default("")
  description String    @default("")
  tools       Tool[]    @relation("Collection_tools")
  user        User?     @relation("Collection_user", fields: [userId], references: [id])
  userId      String?   @map("user")
  isPublic    Boolean   @default(false)
  tags        Tag[]     @relation("Collection_tags")
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt

  @@index([userId])
}

model NewsItem {
  id           String    @id @default(cuid())
  title        String    @default("")
  slug         String    @unique @default("")
  summary      String    @default("")
  content      Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author       User?     @relation("NewsItem_author", fields: [authorId], references: [id])
  authorId     String?   @map("author")
  category     String?   @default("framework")
  relatedTools Tool[]    @relation("NewsItem_relatedTools")
  isPublished  Boolean   @default(false)
  publishedAt  DateTime?
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @default(now()) @updatedAt

  @@index([authorId])
}

model Article {
  id                           String         @id @default(cuid())
  title                        String         @default("")
  slug                         String         @unique @default("")
  summary                      String         @default("")
  content                      Json           @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author                       User?          @relation("Article_author", fields: [authorId], references: [id])
  authorId                     String?        @map("author")
  category                     String?        @default("guide")
  relatedTools                 Tool[]         @relation("Article_relatedTools")
  relatedArticles              Article[]      @relation("Article_relatedArticles")
  tags                         ContentTag[]   @relation("Article_tags")
  featuredImage_id             String?
  featuredImage_filesize       Int?
  featuredImage_width          Int?
  featuredImage_height         Int?
  featuredImage_extension      String?
  gallery                      Json?          @default("[]")
  metadata                     Json?          @default("{}")
  difficultyLevel              String?        @default("beginner")
  estimatedReadTime            Int?           @default(5)
  isPublished                  Boolean        @default(false)
  isFeatured                   Boolean        @default(false)
  publishedAt                  DateTime?
  lastReviewed                 DateTime?
  viewCount                    Int?           @default(0)
  likeCount                    Int?           @default(0)
  createdAt                    DateTime?      @default(now())
  updatedAt                    DateTime?      @default(now()) @updatedAt
  from_Article_relatedArticles Article[]      @relation("Article_relatedArticles")
  from_LearningPath_articles   LearningPath[] @relation("LearningPath_articles")

  @@index([authorId])
}

model ToolGuide {
  id                 String    @id @default(cuid())
  tool               Tool?     @relation("ToolGuide_tool", fields: [toolId], references: [id])
  toolId             String?   @map("tool")
  title              String    @default("")
  type               String?   @default("getting-started")
  content            Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author             User?     @relation("ToolGuide_author", fields: [authorId], references: [id])
  authorId           String?   @map("author")
  prerequisites      String    @default("")
  learningObjectives Json?     @default("[]")
  screenshots        Json?     @default("[]")
  videoUrl           String    @default("")
  codeExamples       Json?     @default("[]")
  difficultyLevel    String?   @default("beginner")
  estimatedTime      Int?      @default(15)
  isPublished        Boolean   @default(false)
  lastUpdated        DateTime?
  viewCount          Int?      @default(0)
  helpfulCount       Int?      @default(0)
  createdAt          DateTime? @default(now())

  @@index([toolId])
  @@index([authorId])
}

model MediaFile {
  id            String       @id @default(cuid())
  name          String       @default("")
  description   String       @default("")
  file_filesize Int?
  file_filename String?
  type          String?      @default("image")
  alt           String       @default("")
  tags          ContentTag[] @relation("ContentTag_media")
  uploadedBy    User?        @relation("MediaFile_uploadedBy", fields: [uploadedById], references: [id])
  uploadedById  String?      @map("uploadedBy")
  fileSize      Int?
  mimeType      String       @default("")
  isPublic      Boolean      @default(true)
  createdAt     DateTime?    @default(now())

  @@index([uploadedById])
}

model ContentTag {
  id          String      @id @default(cuid())
  name        String      @default("")
  slug        String      @unique @default("")
  description String      @default("")
  color       String      @default("")
  articles    Article[]   @relation("Article_tags")
  media       MediaFile[] @relation("ContentTag_media")
  usageCount  Int?        @default(0)
  createdAt   DateTime?   @default(now())
}

model LearningPath {
  id                String    @id @default(cuid())
  title             String    @default("")
  slug              String    @unique @default("")
  description       String    @default("")
  content           Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  creator           User?     @relation("LearningPath_creator", fields: [creatorId], references: [id])
  creatorId         String?   @map("creator")
  difficulty        String?   @default("beginner")
  estimatedDuration Int?      @default(10)
  tools             Tool[]    @relation("LearningPath_tools")
  articles          Article[] @relation("LearningPath_articles")
  prerequisites     Json?     @default("[]")
  learningOutcomes  Json?     @default("[]")
  isPublished       Boolean   @default(false)
  isFeatured        Boolean   @default(false)
  enrollmentCount   Int?      @default(0)
  completionRate    Int?      @default(0)
  rating            Int?      @default(25)
  createdAt         DateTime? @default(now())
  updatedAt         DateTime? @default(now()) @updatedAt

  @@index([creatorId])
}

model Contribution {
  id            String    @id @default(cuid())
  title         String    @default("")
  type          String?   @default("tool-submission")
  description   String    @default("")
  content       Json?     @default("{}")
  contributor   User?     @relation("Contribution_contributor", fields: [contributorId], references: [id])
  contributorId String?   @map("contributor")
  relatedTool   Tool?     @relation("Contribution_relatedTool", fields: [relatedToolId], references: [id])
  relatedToolId String?   @map("relatedTool")
  status        String?   @default("submitted")
  reviewedBy    User?     @relation("Contribution_reviewedBy", fields: [reviewedById], references: [id])
  reviewedById  String?   @map("reviewedBy")
  reviewNotes   String    @default("")
  priority      String?   @default("medium")
  submittedAt   DateTime? @default(now())
  reviewedAt    DateTime?

  @@index([contributorId])
  @@index([relatedToolId])
  @@index([reviewedById])
}
