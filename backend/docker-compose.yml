version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: osint-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: osint_framework
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - osint-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: osint-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - osint-network

  # KeystoneJS Backend
  backend:
    build: .
    container_name: osint-backend
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/osint_framework
      REDIS_URL: redis://redis:6379
      NODE_ENV: production
      PORT: 4000
      SESSION_SECRET: ${SESSION_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "4000:4000"
    volumes:
      - ./public:/app/public
      - ./uploads:/app/uploads
    networks:
      - osint-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: osint-nginx
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - osint-network

volumes:
  postgres_data:
  redis_data:

networks:
  osint-network:
    driver: bridge
